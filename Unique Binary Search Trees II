# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def generateTrees(self, n: int) -> List[Optional[TreeNode]]:
        if n == 0 :
            return 
        def buildTrees(start, end) :
            if start > end :
                return [None]
            all_trees = []
            for i in range(start, end + 1) :
                left_tree = buildTrees(start, i - 1)
                right_tree = buildTrees(i + 1, end)

                for l in left_tree :
                    for r in right_tree :
                        root = TreeNode(i)
                        root.left = l
                        root.right = r
                        all_trees.append(root)
            return all_trees
        return buildTrees(1, n)
